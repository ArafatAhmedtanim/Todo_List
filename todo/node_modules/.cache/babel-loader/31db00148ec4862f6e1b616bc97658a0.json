{"ast":null,"code":"var _jsxFileName = \"/home/arafat/FrontEndDevelop/learning/todo/src/App/components/Router.tsx\";\nimport React from 'react';\nimport { ConnectedRouter } from 'connected-react-router/immutable';\nimport { Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './../../hoc/privateRoute';\n\nconst Router = ({\n  routes,\n  history,\n  children\n}) => React.createElement(ConnectedRouter, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, children, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, routes.map((route, i) => route.type === 'private' ? React.createElement(PrivateRouteWithSubRoutes, Object.assign({\n  key: i\n}, route, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n})) : React.createElement(RouteWithSubRoutes, Object.assign({\n  key: i\n}, route, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}))), React.createElement(Route, {\n  path: \"*\",\n  render: () => React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"404! Not Found\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})));\n\nconst PrivateRouteWithSubRoutes = route => React.createElement(PrivateRoute, {\n  path: route.path,\n  component: route.component,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n});\n\nconst RouteWithSubRoutes = route => React.createElement(Route, {\n  path: route.path,\n  render: props => React.createElement(route.component, Object.assign({}, props, {\n    routes: route.routes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n});\n\nexport default Router;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/learning/todo/src/App/components/Router.tsx"],"names":["React","ConnectedRouter","Switch","Route","PrivateRoute","Router","routes","history","children","map","route","i","type","PrivateRouteWithSubRoutes","path","component","RouteWithSubRoutes","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KACX,oBAAC,eAAD;AAAiB,EAAA,OAAO,EAAED,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,QADL,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAaC,CAAb,KAAwBD,KAAK,CAACE,IAAN,KAAe,SAAf,GAChC,oBAAC,yBAAD;AAA2B,EAAA,GAAG,EAAED;AAAhC,GAAuCD,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADgC,GAEhC,oBAAC,kBAAD;AAAoB,EAAA,GAAG,EAAEC;AAAzB,GAAgCD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFH,CADL,EAII,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,MAAM,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CAFJ,CADJ;;AAWA,MAAMG,yBAAyB,GAAIH,KAAD,IAAgB,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAEA,KAAK,CAACI,IAA1B;AAAgC,EAAA,SAAS,EAAEJ,KAAK,CAACK,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlD;;AACA,MAAMC,kBAAkB,GAAIN,KAAD,IAAgB,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAEA,KAAK,CAACI,IAAnB;AAAyB,EAAA,MAAM,EAAGG,KAAD,IAAgB,oBAAC,KAAD,CAAO,SAAP,oBAAqBA,KAArB;AAA4B,IAAA,MAAM,EAAEP,KAAK,CAACJ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3C;;AAEA,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router/immutable';\nimport { Switch, Route } from 'react-router-dom';\n\nimport PrivateRoute from './../../hoc/privateRoute';\n\nimport { RouteType } from './../types';\n\nconst Router = ({ routes, history, children }: { routes: RouteType[], history: any, children: any }) =>\n    <ConnectedRouter history={history}>\n        {children}\n        <Switch>\n            {routes.map((route: any, i: any) => route.type === 'private' ?\n                <PrivateRouteWithSubRoutes key={i} {...route} /> :\n                <RouteWithSubRoutes key={i} {...route} />)}\n            <Route path=\"*\" render={() => <h1>404! Not Found</h1>} />\n        </Switch>\n    </ConnectedRouter>\n\nconst PrivateRouteWithSubRoutes = (route: any) => <PrivateRoute path={route.path} component={route.component} />\nconst RouteWithSubRoutes = (route: any) => <Route path={route.path} render={(props: any) => <route.component {...props} routes={route.routes} />} />\n\nexport default Router;"]},"metadata":{},"sourceType":"module"}