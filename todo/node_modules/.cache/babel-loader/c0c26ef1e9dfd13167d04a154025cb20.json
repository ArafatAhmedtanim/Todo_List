{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport api from '../../../../services/api';\nimport { loadSuccess, loadFailure, createSuccess } from './actions';\nexport function* load() {\n  try {\n    const response = yield call(api.get, `/todos/`);\n    yield put(loadSuccess(response.data));\n  } catch (err) {\n    yield put(loadFailure());\n  }\n}\nexport function* create(action) {\n  try {\n    console.log(action);\n    const response = yield call(api.get, `/todo/`);\n    yield put(createSuccess(response.data));\n  } catch (err) {\n    yield put(createFailure());\n  }\n}","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/learning/todo/src/Todos/store/ducks/todos/sagas.ts"],"names":["call","put","api","loadSuccess","loadFailure","createSuccess","load","response","get","data","err","create","action","console","log","createFailure"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,aAAnC,QAAwD,WAAxD;AAEA,OAAO,UAAUC,IAAV,GAAiB;AACpB,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACE,GAAG,CAACM,GAAL,EAAW,SAAX,CAA3B;AACA,UAAMP,GAAG,CAACE,WAAW,CAACI,QAAQ,CAACE,IAAV,CAAZ,CAAT;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACV,UAAMT,GAAG,CAACG,WAAW,EAAZ,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,MAAV,CAAiBC,MAAjB,EAA8B;AACjC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAML,QAAQ,GAAG,MAAMP,IAAI,CAACE,GAAG,CAACM,GAAL,EAAW,QAAX,CAA3B;AACA,UAAMP,GAAG,CAACI,aAAa,CAACE,QAAQ,CAACE,IAAV,CAAd,CAAT;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACV,UAAMT,GAAG,CAACc,aAAa,EAAd,CAAT;AACH;AACJ","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport api from '../../../../services/api';\n\nimport { loadSuccess, loadFailure, createSuccess } from './actions';\n\nexport function* load() {\n    try {\n        const response = yield call(api.get, `/todos/`);\n        yield put(loadSuccess(response.data));\n    } catch (err) {\n        yield put(loadFailure());\n    }\n}\n\nexport function* create(action: any) {\n    try {\n        console.log(action)\n        const response = yield call(api.get, `/todo/`);\n        yield put(createSuccess(response.data))\n    } catch (err) {\n        yield put(createFailure())\n    }\n}"]},"metadata":{},"sourceType":"module"}